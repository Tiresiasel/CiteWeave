# Docker Compose for Apple Silicon (ARM64) hosts

services:
  qdrant:
    image: qdrant/qdrant:latest
    platform: linux/arm64/v8
    container_name: citeweave-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
      - ./qdrant_config:/qdrant/config
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__SERVICE__ENABLE_TLS=false
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/readyz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  grobid:
    image: lfoppiano/grobid:0.8.0
    # GROBID image is amd64-only. Enable Rosetta/QEMU emulation in Docker Desktop and force platform:
    platform: linux/amd64
    container_name: citeweave-grobid
    ports:
      - "8070:8070"
    environment:
      - JAVA_OPTS=-Xmx4g
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8070/api/isalive"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  neo4j:
    image: neo4j:5.15
    platform: linux/arm64/v8
    container_name: citeweave-neo4j
    ports:
      - "7687:7687"
      - "7474:7474"
    environment:
      - NEO4J_AUTH=neo4j/12345678
      - NEO4J_dbms_security_auth__enabled=true
    volumes:
      - neo4j_data:/data
    restart: unless-stopped

  citeweave:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/arm64/v8
    container_name: citeweave-app
    # App can start regardless; entrypoint waits for deps via URLs
    environment:
      - CITEWEAVE_API_HOST=0.0.0.0
      - CITEWEAVE_API_PORT=31415
      - CITEWEAVE_ENV=production
      - CITEWEAVE_DATA_DIR=/app/data
      - CITEWEAVE_SETTINGS_PATH=/app/data/settings.json
      - QDRANT_URL=http://qdrant:6333
      - GROBID_URL=http://grobid:8070
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=12345678
    ports:
      - "31415:31415"
    volumes:
      - app_data:/app/data
    restart: unless-stopped
    develop:
      watch:
        - path: ./src
          action: sync
          target: /app/src
        - path: ./src/api/static
          action: sync
          target: /app/src/api/static
        - path: ./requirements.txt
          action: rebuild
        - path: ./pyproject.toml
          action: rebuild
        - path: ./Dockerfile
          action: rebuild
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:31415/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  qdrant_storage:
    driver: local
  neo4j_data:
    driver: local
  app_data:
    driver: local


